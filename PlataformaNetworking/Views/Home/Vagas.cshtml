@model PlataformaNetworking.Models.Usuario
@{
    ViewData["Title"] = "Vagas";
    //string uploadimagem = Model.UploadPictureUrl == null ? "~/images/avatar3.png" : Model.UploadPictureUrl;
}


<!-- Page Container -->
<div class="container-fluid gedf-wrapper mt-3">
    <div class="row">
        <div class="col-md-3">
            <div class="card">
                <div class="card-body">

                    <p class="w3-center">
                        <div class=" containerPerfil" id="triggerUploadClick">
                            <img src="@(Model.ProfilePictureUrl == null ? "~/images/avatar2.png" : Model.ProfilePictureUrl)" class="rounded-circle imagemPerfil" alt="Avatar" id="imagemPerfilAlterar">
                            <div class="overlay">
                                <a href="#" class="icon" title="User Profile">
                                    <i class="fa fa-camera"></i>
                                </a>
                            </div>
                            <input type="file" name="uploadFotoPerfil" class="d-none" accept="image/png, image/jpeg" id="campoUploadImagem" />
                        </div>
                    </p>
                    <div class="formAlterarImagemUsuario d-none">
                        <form method="post" id="formAlterarImagem">
                            <input name="ProfilePictureUrl" id="campoInputNovaImagem" type="text" value="@Model.ProfilePictureUrl" />
                        </form>
                    </div>
                    <div class="h5">@Model.Nome @Model.Sobrenome</div>
                    <div class="h7 text-muted">@Model.GetType().Name</div>
                </div>
                @await Component.InvokeAsync("Painel")
            </div>
        </div>
        <div class="col-md-6 gedf-main">

           

            @{
                    
                if (Model.GetType().Name == "Empresa") {
                    @await Component.InvokeAsync("PublicacaoVaga")
                }
            }



            

            <!--chamar View component aqui-->
            @await Component.InvokeAsync("ConteudoVaga")

        </div>
        <div class="col-md-3 justify-content">
            <!--Pedido de Amizade-->
            @await Component.InvokeAsync("PedidoAmizade")
        </div>
    </div>
</div>


@section Scripts{
    <script src="~/js/uploadImagem.js"></script>
}